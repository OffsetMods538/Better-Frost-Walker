plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'io.github.dexman545.outlet' version '1.6.1'
	id 'com.modrinth.minotaur' version '2.+'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + project.minecraft_version
group = project.maven_group

outlet.mcVersionRange = project.minecraft_version

repositories {
	maven {
		name = "JitPack"
		url = "https://jitpack.io"
		content {
			includeGroup "com.github.llamalad7.mixinextras"
			includeGroup "top.offsetmonkey538"
		}
	}
}

loom {
    splitEnvironmentSourceSets()

    mods {
        modid {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${outlet.yarnVersion(project.minecraft_version)}:v2"
	modImplementation "net.fabricmc:fabric-loader:${outlet.loaderVersion()}"

	// Config library
	include modImplementation("top.offsetmonkey538:monkeyconfig538:${project.monkeyconfig538_version}")

	// Mixin Extras
	include(implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:${project.mixinextras_version}")))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "better-frost-walker"
	def customVersionName = System.getenv("VERSION_NAME")
	if (customVersionName != null) versionName = customVersionName
	versionNumber = "${version}"
	versionType = "beta"
	uploadFile = remapJar.archiveFile
	//additionalFiles = [sourcesJar.archiveFile, javadocJar.archiveFile]
	additionalFiles = [sourcesJar.archiveFile]
	gameVersions = outlet.mcVersions()
	syncBodyFrom = rootProject.file("README.md").text
	def changelogFile = rootProject.file("CHANGELOG.md")
	if (changelogFile.exists()) {
		changelog = changelogFile.text
	}

	dependencies {
		embedded.version("monkeyconfig538", project.monkeyconfig538_version)
	}
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
